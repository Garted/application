{"version":3,"sources":["redux/actions/Data.js","views/app-views/components/UserProfile/UserProfile.js","views/app-views/user/index.js"],"names":["updateUser","data","type","UPDATE_USER","payload","removeUser","id","REMOVE_USER","UserProfile","useSelector","state","usersData","filter","item","useState","userData","setUserData","dispatch","useDispatch","history","useHistory","showLoader","setShowLoader","useEffect","handleChange","path","e","prev","keys","split","newData","temp","slice","forEach","key","length","target","value","style","maxWidth","display","flexWrap","onFinish","setTimeout","push","layout","name","initialValues","email","username","phone","website","city","address","street","suite","zipcode","company","phrase","bs","Item","width","label","rules","required","message","onChange","marginBottom","htmlType","position","top","left","transform","Loading","User","useParams"],"mappings":"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","file":"static/js/13.7ea00107.chunk.js","sourcesContent":["import { UPDATE_USER, REMOVE_USER } from 'redux/constants/UsersData';\r\n\r\nexport const updateUser = (data) => {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const removeUser = (id) => {\r\n  return {\r\n    type: REMOVE_USER,\r\n    payload: id,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { updateUser } from 'redux/actions/Data';\r\nconst UserProfile = ({ id }) => {\r\n  const data = useSelector(\r\n    (state) => state.usersData.data.filter((item) => item.id === +id)[0]\r\n  );\r\n  const [userData, setUserData] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUserData(data);\r\n    }\r\n  }, [data]);\r\n  const handleChange = (path) => (e) => {\r\n    setUserData((prev) => {\r\n      const keys = path.split('.');\r\n      const newData = { ...prev };\r\n      let temp = newData;\r\n      keys.slice(0, -1).forEach((key) => {\r\n        temp[key] = { ...temp[key] };\r\n        temp = temp[key];\r\n      });\r\n      temp[keys[keys.length - 1]] = e.target.value;\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(updateUser(userData));\r\n    setShowLoader(true);\r\n    setTimeout(() => {\r\n      history.push('/app/users');\r\n    }, 1000);\r\n  };\r\n  return (\r\n    <>\r\n      {!userData ? (\r\n        <Loading />\r\n      ) : (\r\n        <Form\r\n          style={{\r\n            maxWidth: '1000px',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n          }}\r\n          onFinish={handleClick}\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{\r\n            name: userData.name,\r\n            email: userData.email,\r\n            username: userData.username,\r\n            phone: userData.phone,\r\n            website: userData.website,\r\n            city: userData.address.city,\r\n            street: userData.address.street,\r\n            suite: userData.address.suite,\r\n            zipcode: userData.address.zipcode,\r\n            company: userData.company.name,\r\n            phrase: userData.company.bs,\r\n          }}\r\n        >\r\n          <Form.Item\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Input onChange={handleChange('name')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input onChange={handleChange('username')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input onChange={handleChange('email')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('phone')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Website\"\r\n            name=\"website\"\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('website')} />\r\n          </Form.Item>\r\n          <h4\r\n            style={{\r\n              width: '100%',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            Address\r\n          </h4>\r\n          <Form.Item\r\n            label=\"City\"\r\n            name=\"city\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('address.city')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Street\"\r\n            name=\"street\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('address.street')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Suite\"\r\n            name=\"suite\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('address.suite')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Postcode\"\r\n            name=\"zipcode\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('address.zipcode')} />\r\n          </Form.Item>\r\n          <h4\r\n            style={{\r\n              width: '100%',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            Work\r\n          </h4>\r\n\r\n          <Form.Item\r\n            label=\"Company\"\r\n            name=\"company\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('company.name')} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Phrase\"\r\n            name=\"phrase\"\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Input onChange={handleChange('company.bs')} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            style={{\r\n              width: '50%',\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <div\r\n            style={{\r\n              display: `${showLoader ? 'block' : 'none'}`,\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%,-50%)',\r\n            }}\r\n          >\r\n            <Loading></Loading>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserProfile from '../components/UserProfile/UserProfile';\r\nconst User = () => {\r\n  const { id } = useParams();\r\n\r\n  //инпуты для изменения данных, кнопку для сохранения и отправки на сервер\r\n\r\n  return (\r\n    <div>\r\n      <h3>Edit User</h3>\r\n      <UserProfile id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}